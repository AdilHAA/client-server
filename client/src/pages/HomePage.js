import React from 'react';
import styled from 'styled-components';
import { Link } from 'react-router-dom';
import Navbar from '../components/Navbar';
import { useAuth } from '../context/AuthContext';

const HomePage = () => {
  const { user } = useAuth();
  
  return (
    <Container>
      <Navbar />
      <Hero>
        <HeroContent>
          <HeroTitle>
            <HeroIcon>ü§ñ</HeroIcon>
            AI Assistant
          </HeroTitle>
          <HeroSubtitle>
            –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π —á–∞—Ç-–±–æ—Ç —Å –≥–æ–ª–æ—Å–æ–≤—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∏ –¥–æ—Å—Ç—É–ø–æ–º –∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
          </HeroSubtitle>
          <HeroDescription>
            –û–±—â–∞–π—Ç–µ—Å—å —Å —É–º–Ω—ã–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∏—Å–∫–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é,
            –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ–≥–∞—Ç—å –≤ —Ä–µ—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ
            —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.
          </HeroDescription>
          <ButtonGroup>
            {user ? (
              <PrimaryButton as={Link} to="/chats">
                –ú–æ–∏ —á–∞—Ç—ã
              </PrimaryButton>
            ) : (
              <>
                <PrimaryButton as={Link} to="/login">
                  –í–æ–π—Ç–∏
                </PrimaryButton>
                <SecondaryButton as={Link} to="/register">
                  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                </SecondaryButton>
              </>
            )}
          </ButtonGroup>
        </HeroContent>
        <HeroImage>
          <ChatBubble $position="top">–ü—Ä–∏–≤–µ—Ç! –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?</ChatBubble>
          <ChatBubble $position="middle">–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö</ChatBubble>
          <ChatBubble $position="bottom">
            –í–æ—Ç —á—Ç–æ –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–µ–Ω–¥–∞—Ö...
          </ChatBubble>
        </HeroImage>
      </Hero>
      
      <Features>
        <FeatureTitle>–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</FeatureTitle>
        <FeatureGrid>
          <FeatureCard>
            <FeatureIcon>üîç</FeatureIcon>
            <FeatureCardTitle>–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</FeatureCardTitle>
            <FeatureDescription>
              –ü–æ–ª—É—á–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–∫–∏–¥–∞—Ç—å —á–∞—Ç
            </FeatureDescription>
          </FeatureCard>
          
          <FeatureCard>
            <FeatureIcon>üé§</FeatureIcon>
            <FeatureCardTitle>–ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</FeatureCardTitle>
            <FeatureDescription>
              –û–±—â–∞–π—Ç–µ—Å—å —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º —Å –ø–æ–º–æ—â—å—é –≥–æ–ª–æ—Å–∞ –¥–ª—è –±–æ–ª–µ–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
            </FeatureDescription>
          </FeatureCard>
          
          <FeatureCard>
            <FeatureIcon>üìä</FeatureIcon>
            <FeatureCardTitle>–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–æ–≤</FeatureCardTitle>
            <FeatureDescription>
              –í—Å–µ –≤–∞—à–∏ –±–µ—Å–µ–¥—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∏–º –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç
            </FeatureDescription>
          </FeatureCard>
        </FeatureGrid>
      </Features>
      
      <Footer>
        <FooterText>¬© {new Date().getFullYear()} AI Assistant. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</FooterText>
      </Footer>
    </Container>
  );
};

const Container = styled.div`
  min-height: 100vh;
  display: flex;
  flex-direction: column;
`;

const Hero = styled.div`
  display: flex;
  padding: 4rem 2rem;
  background-color: var(--light-color);
  
  @media (max-width: 768px) {
    flex-direction: column;
    padding: 2rem 1rem;
  }
`;

const HeroContent = styled.div`
  flex: 1;
  max-width: 600px;
`;

const HeroTitle = styled.h1`
  font-size: 3rem;
  color: var(--dark-color);
  margin-bottom: 1.5rem;
  display: flex;
  align-items: center;
  
  @media (max-width: 768px) {
    font-size: 2rem;
  }
`;

const HeroIcon = styled.span`
  font-size: 3.5rem;
  margin-right: 1rem;
  
  @media (max-width: 768px) {
    font-size: 2.5rem;
  }
`;

const HeroSubtitle = styled.h2`
  font-size: 1.5rem;
  color: var(--primary-color);
  margin-bottom: 1.5rem;
  line-height: 1.3;
  
  @media (max-width: 768px) {
    font-size: 1.25rem;
  }
`;

const HeroDescription = styled.p`
  font-size: 1.1rem;
  color: var(--secondary-color);
  margin-bottom: 2rem;
  line-height: 1.6;
`;

const ButtonGroup = styled.div`
  display: flex;
  gap: 1rem;
  
  @media (max-width: 768px) {
    flex-direction: column;
  }
`;

const PrimaryButton = styled.button`
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 4px;
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s;
  text-decoration: none;
  display: inline-block;
  text-align: center;
  
  &:hover {
    background-color: var(--primary-dark);
  }
`;

const SecondaryButton = styled.button`
  background-color: white;
  color: var(--primary-color);
  border: 1px solid var(--primary-color);
  border-radius: 4px;
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s;
  text-decoration: none;
  display: inline-block;
  text-align: center;
  
  &:hover {
    background-color: rgba(44, 123, 229, 0.1);
  }
`;

const HeroImage = styled.div`
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  padding-left: 2rem;
  
  @media (max-width: 768px) {
    padding-left: 0;
    margin-top: 2rem;
  }
`;

const ChatBubble = styled.div`
  background-color: white;
  padding: 1rem;
  border-radius: 12px;
  box-shadow: var(--box-shadow);
  margin-bottom: 1rem;
  max-width: 80%;
  position: relative;
  
  ${props => props.$position === 'top' && `
    align-self: flex-start;
  `}
  
  ${props => props.$position === 'middle' && `
    align-self: flex-end;
    background-color: var(--primary-color);
    color: white;
  `}
  
  ${props => props.$position === 'bottom' && `
    align-self: flex-start;
  `}
`;

const Features = styled.div`
  padding: 4rem 2rem;
  background-color: white;
  text-align: center;
  
  @media (max-width: 768px) {
    padding: 2rem 1rem;
  }
`;

const FeatureTitle = styled.h2`
  font-size: 2rem;
  color: var(--dark-color);
  margin-bottom: 3rem;
`;

const FeatureGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
  max-width: 1200px;
  margin: 0 auto;
`;

const FeatureCard = styled.div`
  padding: 2rem;
  background-color: var(--light-color);
  border-radius: 8px;
  box-shadow: var(--box-shadow);
  transition: transform 0.3s;
  
  &:hover {
    transform: translateY(-5px);
  }
`;

const FeatureIcon = styled.div`
  font-size: 3rem;
  margin-bottom: 1rem;
`;

const FeatureCardTitle = styled.h3`
  font-size: 1.25rem;
  color: var(--dark-color);
  margin-bottom: 1rem;
`;

const FeatureDescription = styled.p`
  color: var(--secondary-color);
  line-height: 1.5;
`;

const Footer = styled.footer`
  padding: 2rem;
  background-color: var(--dark-color);
  color: white;
  text-align: center;
  margin-top: auto;
`;

const FooterText = styled.p`
  margin: 0;
  font-size: 0.875rem;
`;

export default HomePage; 